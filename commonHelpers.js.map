{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n// ===============================================================\nlet userSelectedDate = 0;\nconst buttonStart = document.querySelector('button');\nconst dataDays = document.querySelector('span[data-days]');\nconst dataHours = document.querySelector('span[data-hours]');\nconst dataMinutes = document.querySelector('span[data-minutes]');\nconst dataSeconds = document.querySelector('span[data-seconds]');\n\nconst newDate = Date.now();\nbuttonStart.disabled = true;\nconst inputEl = document.getElementById('datetime-picker');\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    console.log(userSelectedDate);\n    if (userSelectedDate < Date.now()) {\n      alert('Please choose a date in the future');\n      buttonStart.disabled = true;\n    }\n    if (userSelectedDate > Date.now()) {\n      buttonStart.disabled = false;\n    }\n    const dateFinish = userSelectedDate - newDate;\n\n    const { days, hours, minutes, seconds } = convertMs(dateFinish);\n    buttonStart.addEventListener('click', e => {\n      setInterval(() => {\n        dataDays.textContent = days;\n        dataHours.textContent = hours;\n        dataMinutes.textContent = minutes;\n        dataSeconds.textContent = seconds;\n      }, 1000);\n      console.log(dateFinish);\n    });\n  },\n};\nflatpickr(inputEl, options);\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["userSelectedDate","buttonStart","dataDays","dataHours","dataMinutes","dataSeconds","newDate","inputEl","options","selectedDates","dateFinish","days","hours","minutes","seconds","convertMs","e","flatpickr","ms"],"mappings":"oGAKA,IAAIA,EAAmB,EACvB,MAAMC,EAAc,SAAS,cAAc,QAAQ,EAC7CC,EAAW,SAAS,cAAc,iBAAiB,EACnDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EAEzDC,EAAU,KAAK,MACrBL,EAAY,SAAW,GACvB,MAAMM,EAAU,SAAS,eAAe,iBAAiB,EACnDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBT,EAAmBS,EAAc,GACjC,QAAQ,IAAIT,CAAgB,EACxBA,EAAmB,KAAK,QAC1B,MAAM,oCAAoC,EAC1CC,EAAY,SAAW,IAErBD,EAAmB,KAAK,QAC1BC,EAAY,SAAW,IAEzB,MAAMS,EAAaV,EAAmBM,EAEhC,CAAE,KAAAK,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAU,EAC9DT,EAAY,iBAAiB,QAASe,GAAK,CACzC,YAAY,IAAM,CAChBd,EAAS,YAAcS,EACvBR,EAAU,YAAcS,EACxBR,EAAY,YAAcS,EAC1BR,EAAY,YAAcS,CAC3B,EAAE,GAAI,EACP,QAAQ,IAAIJ,CAAU,CAC5B,CAAK,CACF,CACH,EACAO,EAAUV,EAASC,CAAO,EAC1B,SAASO,EAAUG,EAAI,CAQrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAE1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EAEpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EAEjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}