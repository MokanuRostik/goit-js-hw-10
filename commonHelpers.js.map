{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nlet countdownInterval;\nconst buttonStart = document.querySelector('button');\nconst dataDays = document.querySelector('span[data-days]');\nconst dataHours = document.querySelector('span[data-hours]');\nconst dataMinutes = document.querySelector('span[data-minutes]');\nconst dataSeconds = document.querySelector('span[data-seconds]');\nbuttonStart.disabled = true;\n\nconst inputEl = document.getElementById('datetime-picker');\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate < Date.now()) {\n      alert('Please choose a date in the future');\n      buttonStart.disabled = true;\n      clearInterval(countdownInterval);\n    } else {\n      buttonStart.disabled = false;\n      buttonStart.addEventListener('click', () => {\n        countdownInterval = setInterval(() => {\n          const timeDifference = selectedDate.getTime() - Date.now();\n\n          if (timeDifference <= 0) {\n            clearInterval(countdownInterval);\n            return;\n          }\n\n          const { days, hours, minutes, seconds } = convertMs(timeDifference);\n\n          dataDays.textContent = days.toString().padStart(2, '0');\n          dataHours.textContent = hours.toString().padStart(2, '0');\n          dataMinutes.textContent = minutes.toString().padStart(2, '0');\n          dataSeconds.textContent = seconds.toString().padStart(2, '0');\n          buttonStart.disabled = true;\n        }, 1000);\n      });\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["countdownInterval","buttonStart","dataDays","dataHours","dataMinutes","dataSeconds","inputEl","options","selectedDates","selectedDate","timeDifference","days","hours","minutes","seconds","convertMs","flatpickr","ms"],"mappings":"oGAGA,IAAIA,EACJ,MAAMC,EAAc,SAAS,cAAc,QAAQ,EAC7CC,EAAW,SAAS,cAAc,iBAAiB,EACnDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EAC/DJ,EAAY,SAAW,GAEvB,MAAMK,EAAU,SAAS,eAAe,iBAAiB,EACnDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,GAC/BC,EAAe,KAAK,OACtB,MAAM,oCAAoC,EAC1CR,EAAY,SAAW,GACvB,cAAcD,CAAiB,IAE/BC,EAAY,SAAW,GACvBA,EAAY,iBAAiB,QAAS,IAAM,CAC1CD,EAAoB,YAAY,IAAM,CACpC,MAAMU,EAAiBD,EAAa,QAAS,EAAG,KAAK,IAAG,EAExD,GAAIC,GAAkB,EAAG,CACvB,cAAcV,CAAiB,EAC/B,MACD,CAED,KAAM,CAAE,KAAAW,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAc,EAElER,EAAS,YAAcS,EAAK,SAAU,EAAC,SAAS,EAAG,GAAG,EACtDR,EAAU,YAAcS,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EACxDR,EAAY,YAAcS,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,EAC5DR,EAAY,YAAcS,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,EAC5Db,EAAY,SAAW,EACxB,EAAE,GAAI,CACf,CAAO,EAEJ,CACH,EAEAe,EAAUV,EAASC,CAAO,EAE1B,SAASQ,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAOI,EAAK,KAAQ,GAAM,EACzCH,EAAU,KAAK,MAAOG,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}